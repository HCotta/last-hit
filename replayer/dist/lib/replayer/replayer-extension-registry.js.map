{"version":3,"sources":["../lib/replayer/replayer-extension-registry.ts"],"names":[],"mappings":"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","file":"replayer-extension-registry.js","sourcesContent":["import {\n\tExtensionDataTransmittedEvent,\n\tExtensionErrorLogEvent,\n\tExtensionEventTypes,\n\tExtensionLogEvent,\n\tExtensionPoint,\n\tExtensionRegisteredEvent,\n\tExtensionRegistry,\n\tExtensionUnregisteredEvent\n} from 'last-hit-extensions';\nimport { Environment as Env, WorkspaceExtensions } from 'last-hit-types';\nimport path from 'path';\nimport uuidv4 from 'uuid/v4';\nimport Environment from '../config/env';\n\nexport class WorkspaceExtensionRegistry extends ExtensionRegistry {\n\tprivate workspaceExtensionId: string;\n\tprivate workspaceExtensionFolder: string;\n\tprivate env: Environment;\n\n\tconstructor(options: { env: Environment }) {\n\t\tsuper();\n\n\t\tconst { env } = options;\n\t\tthis.workspaceExtensionId = uuidv4();\n\t\tthis.workspaceExtensionFolder = path.join(env.getWorkspace(), '.scripts');\n\t\tthis.env = env;\n\t}\n\tgetWorkspaceExtensionId(): string {\n\t\treturn this.workspaceExtensionId;\n\t}\n\tgetWorkspaceExtensionFolder(): string {\n\t\treturn this.workspaceExtensionFolder;\n\t}\n\tgetEnvironment(): Environment {\n\t\treturn this.env;\n\t}\n\tasync launch(): Promise<void> {\n\t\treturn new Promise(async (resolve, reject) => {\n\t\t\tconst onRegistered = async (event: ExtensionRegisteredEvent) => {\n\t\t\t\toff();\n\t\t\t\tconst { error } = event;\n\t\t\t\tif (error) {\n\t\t\t\t\t// register failed\n\t\t\t\t\tconsole.log('register failed', error);\n\t\t\t\t\tresolve();\n\t\t\t\t} else {\n\t\t\t\t\t// register successfully\n\t\t\t\t\tthis.once(\n\t\t\t\t\t\tExtensionEventTypes.DATA_TRANSMITTED,\n\t\t\t\t\t\t(event: ExtensionDataTransmittedEvent): void => {\n\t\t\t\t\t\t\tconst { data } = event;\n\t\t\t\t\t\t\tif (data.ignore) {\n\t\t\t\t\t\t\t\t// ignore event, do nothing\n\t\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t\t'environment prepare is ignored by workspace extension scripts'\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tresolve();\n\t\t\t\t\t\t\t} else if (data.error) {\n\t\t\t\t\t\t\t\t// error occurred\n\t\t\t\t\t\t\t\tconsole.error(\n\t\t\t\t\t\t\t\t\t'error occurred on environment prepare via workspace extension scripts, ignored'\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tconsole.error(data.error);\n\t\t\t\t\t\t\t\tresolve();\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t\t'environment returned from workspace extension scripts',\n\t\t\t\t\t\t\t\t\tdata\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t// merge\n\t\t\t\t\t\t\t\tthis.getEnvironment().mergeFrom(data);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t\tthis.sendMessage(this.getWorkspaceExtensionId(), {\n\t\t\t\t\t\ttype: 'env-prepare',\n\t\t\t\t\t\tenv: this.getEnvironment().expose() as Env\n\t\t\t\t\t} as WorkspaceExtensions.EnvironmentPrepareEvent);\n\t\t\t\t}\n\t\t\t};\n\t\t\tconst onUnregistered = (event: ExtensionUnregisteredEvent) => {\n\t\t\t\toff();\n\t\t\t\tresolve();\n\t\t\t};\n\t\t\tconst onLog = (event: ExtensionLogEvent) => {\n\t\t\t\tconsole.log('log on extension register');\n\t\t\t\tconsole.log(event);\n\t\t\t};\n\t\t\tconst onErrorLog = (event: ExtensionErrorLogEvent) => {\n\t\t\t\tconsole.error('error occurred on extension register');\n\t\t\t\tconsole.error(event);\n\t\t\t};\n\t\t\tthis.once(ExtensionEventTypes.REGISTERED, onRegistered)\n\t\t\t\t.once(ExtensionEventTypes.UNREGISTERED, onUnregistered)\n\t\t\t\t.on(ExtensionEventTypes.LOG, onLog)\n\t\t\t\t.on(ExtensionEventTypes.ERROR_LOG, onErrorLog);\n\n\t\t\tconst off = () => {\n\t\t\t\tthis.off(ExtensionEventTypes.REGISTERED, onRegistered)\n\t\t\t\t\t.off(ExtensionEventTypes.UNREGISTERED, onUnregistered)\n\t\t\t\t\t.off(ExtensionEventTypes.LOG, onLog)\n\t\t\t\t\t.off(ExtensionEventTypes.ERROR_LOG, onErrorLog);\n\t\t\t};\n\t\t\tawait this.startupExtension(\n\t\t\t\tnew ExtensionPoint({\n\t\t\t\t\tid: this.getWorkspaceExtensionId(),\n\t\t\t\t\tname: 'temp-workspace-extension',\n\t\t\t\t\tdescription: '',\n\t\t\t\t\tfolder: this.getWorkspaceExtensionFolder()\n\t\t\t\t})\n\t\t\t);\n\t\t});\n\t}\n}\n"]}